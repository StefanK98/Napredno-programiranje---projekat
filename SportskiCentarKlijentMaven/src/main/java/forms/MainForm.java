/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import FormKorisnik.FormNoviKorisnik;
import FormKorisnik.FormPretragaKorisnika;
import FormPomocniTrener.FormNoviPomocniTrener;
import FormPomocniTrener.FormPretragaPomocnihTrenera;
import FormTrening.FormNoviTrening;
import FormTrening.FormPretragaTreninga;
import FormVezbeZaTrening.FormDodajVezbeZaTrening;
import FormVezbeZaTrening.FormVezbeZaTrening;
import controller.ClientController;
import domain.Korisnik;
import domain.PomocniTrener;
import domain.Trening;
import domain.ZakazanTermin;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.TableModelTermini;
import session.Session;

/**
 *
 * @author Kujovic
 */
public class MainForm extends javax.swing.JFrame {

    PomocniTrener pomocniTrener;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        setLocationRelativeTo(null);
        pomocniTrener = Session.getInstance().getTrenutnoUlogovaniPomocniTrener();
        System.out.println(pomocniTrener);
        lblUlogovani.setText("Trenutno ulogovani pomocni trener: "
                + pomocniTrener.getIme() + " " + pomocniTrener.getPrezime());
        popuniKorisnike();
        popuniTreninge();
        TableModelTermini model = new TableModelTermini();
        Thread th = new Thread(model);
        th.start();
        tblTermini.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblUlogovani = new javax.swing.JLabel();
        lblKorisnik = new javax.swing.JLabel();
        lblTrening = new javax.swing.JLabel();
        lblDatumVreme = new javax.swing.JLabel();
        cbKorisnik = new javax.swing.JComboBox();
        cbTrening = new javax.swing.JComboBox();
        txtDatumVreme = new javax.swing.JTextField();
        btnDodajVezbe = new javax.swing.JButton();
        lblPretraga = new javax.swing.JLabel();
        txtPretraga = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTermini = new javax.swing.JTable();
        btnDetaljiZakazanogTermina = new javax.swing.JButton();
        btnObrisiTermin = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        menuItemNoviPomocniTrener = new javax.swing.JMenuItem();
        menuItemPretragaPomocnihTrenera = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        menuItemNoviKorisnik = new javax.swing.JMenuItem();
        menuItemPretragaKorisnika = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        menuItemNoviTrening = new javax.swing.JMenuItem();
        MenuItemPretragaTreninga = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUlogovani.setText("jLabel1");

        lblKorisnik.setText("Korisnik:");

        lblTrening.setText("Trening:");

        lblDatumVreme.setText("Datum i vreme termina:");

        cbKorisnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbTrening.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDatumVreme.setText("21.10.2021 12:00");

        btnDodajVezbe.setText("Dodaj vezbe za termin");
        btnDodajVezbe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajVezbeActionPerformed(evt);
            }
        });

        lblPretraga.setText("Pretraga:");

        tblTermini.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblTermini);

        btnDetaljiZakazanogTermina.setText("Detalji zakazanog termina");
        btnDetaljiZakazanogTermina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiZakazanogTerminaActionPerformed(evt);
            }
        });

        btnObrisiTermin.setText("Obrisi termin");
        btnObrisiTermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiTerminActionPerformed(evt);
            }
        });

        jMenu3.setText(" Pomocni treneri");

        menuItemNoviPomocniTrener.setText("Novi pomocni trener");
        menuItemNoviPomocniTrener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNoviPomocniTrenerActionPerformed(evt);
            }
        });
        jMenu3.add(menuItemNoviPomocniTrener);

        menuItemPretragaPomocnihTrenera.setText("Pretraga pomocnih trenera");
        menuItemPretragaPomocnihTrenera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPretragaPomocnihTreneraActionPerformed(evt);
            }
        });
        jMenu3.add(menuItemPretragaPomocnihTrenera);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Korisnici");

        menuItemNoviKorisnik.setText("Novi korisnik");
        menuItemNoviKorisnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNoviKorisnikActionPerformed(evt);
            }
        });
        jMenu4.add(menuItemNoviKorisnik);

        menuItemPretragaKorisnika.setText("Pretraga korisnika");
        menuItemPretragaKorisnika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemPretragaKorisnikaActionPerformed(evt);
            }
        });
        jMenu4.add(menuItemPretragaKorisnika);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Trening");

        menuItemNoviTrening.setText(" Novi trening");
        menuItemNoviTrening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemNoviTreningActionPerformed(evt);
            }
        });
        jMenu5.add(menuItemNoviTrening);

        MenuItemPretragaTreninga.setText("Pretraga treninga");
        MenuItemPretragaTreninga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemPretragaTreningaActionPerformed(evt);
            }
        });
        jMenu5.add(MenuItemPretragaTreninga);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnDodajVezbe, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblDatumVreme, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                        .addComponent(lblTrening, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblKorisnik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblUlogovani, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbKorisnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbTrening, 0, 640, Short.MAX_VALUE)
                                        .addComponent(txtDatumVreme))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPretraga))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(btnObrisiTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(btnDetaljiZakazanogTermina, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblUlogovani, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTrening, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTrening, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDatumVreme, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDatumVreme, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGap(18, 18, 18)
                .addComponent(btnDodajVezbe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnObrisiTermin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetaljiZakazanogTermina, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemNoviPomocniTrenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNoviPomocniTrenerActionPerformed
        if (Session.getInstance().getTrenutnoUlogovaniPomocniTrener().getPomocniTrenerID()== 1) {
            new FormNoviPomocniTrener(this, true).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Nemate pristup ovoj operaciji!");
        }
    }//GEN-LAST:event_menuItemNoviPomocniTrenerActionPerformed

    private void menuItemPretragaPomocnihTreneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPretragaPomocnihTreneraActionPerformed
        if (Session.getInstance().getTrenutnoUlogovaniPomocniTrener().getPomocniTrenerID()== 1) {
            new FormPretragaPomocnihTrenera(this, true).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Nemate pristup ovoj operaciji!");
        }
    }//GEN-LAST:event_menuItemPretragaPomocnihTreneraActionPerformed

    private void menuItemNoviKorisnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNoviKorisnikActionPerformed
        new FormNoviKorisnik(this, true).setVisible(true);
    }//GEN-LAST:event_menuItemNoviKorisnikActionPerformed

    private void menuItemPretragaKorisnikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemPretragaKorisnikaActionPerformed
        new FormPretragaKorisnika(this, true).setVisible(true);
    }//GEN-LAST:event_menuItemPretragaKorisnikaActionPerformed

    private void menuItemNoviTreningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemNoviTreningActionPerformed
        new FormNoviTrening(this, true).setVisible(true);
    }//GEN-LAST:event_menuItemNoviTreningActionPerformed

    private void MenuItemPretragaTreningaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemPretragaTreningaActionPerformed
        new FormPretragaTreninga(this, true).setVisible(true);
    }//GEN-LAST:event_MenuItemPretragaTreningaActionPerformed

    private void btnDodajVezbeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajVezbeActionPerformed
        if (txtDatumVreme.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            return;
        }

        try {
            Korisnik k = (Korisnik) cbKorisnik.getSelectedItem();
            Trening t = (Trening) cbTrening.getSelectedItem();

            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy hh:mm");
            Date datumVreme = sdf.parse(txtDatumVreme.getText());
            
            ZakazanTermin zt = new ZakazanTermin(null, datumVreme, 
                    Session.getInstance().getTrenutnoUlogovaniPomocniTrener(),
                    k, t, null);
            
            FormDodajVezbeZaTrening formVzt = new FormDodajVezbeZaTrening(this, true);
            formVzt.setZt(zt);
            formVzt.setVisible(true);

        } catch (ParseException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajVezbeActionPerformed

    private void btnDetaljiZakazanogTerminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiZakazanogTerminaActionPerformed
        int selectedRow = tblTermini.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Niste izabrali nijedan red!");
            return;
        }
        
        TableModelTermini tmt = (TableModelTermini) tblTermini.getModel();
        ZakazanTermin zt = tmt.getSelectedZakazanTermin(selectedRow);
        
        FormVezbeZaTrening fvzt = new FormVezbeZaTrening(this, true, zt);
        fvzt.setZt(zt);
        fvzt.setVisible(true);
        
    }//GEN-LAST:event_btnDetaljiZakazanogTerminaActionPerformed

    private void btnObrisiTerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiTerminActionPerformed
        int selectedRow = tblTermini.getSelectedRow();
        
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Niste izabrali nijedan red!");
            return;
        }
        
        TableModelTermini tmt = (TableModelTermini) tblTermini.getModel();
        ZakazanTermin zt = tmt.getSelectedZakazanTermin(selectedRow);
        
        try {
            ClientController.getInstance().deleteZakazanTermin(zt);
            JOptionPane.showMessageDialog(this, "Uspesno obrisan termin!");
            tmt.refreshTable();
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnObrisiTerminActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem MenuItemPretragaTreninga;
    private javax.swing.JButton btnDetaljiZakazanogTermina;
    private javax.swing.JButton btnDodajVezbe;
    private javax.swing.JButton btnObrisiTermin;
    private javax.swing.JComboBox cbKorisnik;
    private javax.swing.JComboBox cbTrening;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblDatumVreme;
    private javax.swing.JLabel lblKorisnik;
    private javax.swing.JLabel lblPretraga;
    private javax.swing.JLabel lblTrening;
    private javax.swing.JLabel lblUlogovani;
    private javax.swing.JMenuItem menuItemNoviKorisnik;
    private javax.swing.JMenuItem menuItemNoviPomocniTrener;
    private javax.swing.JMenuItem menuItemNoviTrening;
    private javax.swing.JMenuItem menuItemPretragaKorisnika;
    private javax.swing.JMenuItem menuItemPretragaPomocnihTrenera;
    private javax.swing.JTable tblTermini;
    private javax.swing.JTextField txtDatumVreme;
    private javax.swing.JTextField txtPretraga;
    // End of variables declaration//GEN-END:variables

      private void popuniKorisnike() {
        try {
            ArrayList<Korisnik> korisnici = ClientController.getInstance().getAllKorisnik();

            cbKorisnik.removeAllItems();

            for (Korisnik korisnik : korisnici) {
                cbKorisnik.addItem(korisnik);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      
      private void popuniTreninge() {
        try {
            ArrayList<Trening> treninzi = ClientController.getInstance().getAllTrening();

            cbTrening.removeAllItems();

            for (Trening trening : treninzi) {
                cbTrening.addItem(trening);
            }

        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      
    public void dodajZakazanTermin(ZakazanTermin zt) {
        
        try {
            ClientController.getInstance().addZakazanTermin(zt);
            JOptionPane.showMessageDialog(this, "Uspesno zakazan termin!");
            TableModelTermini tmt = (TableModelTermini) tblTermini.getModel();
            tmt.refreshTable();
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

}
